{"version":3,"sources":["LocalStore.js","ImgBoxMods.js","imgbox_package.js"],"names":["init_LocalStore","findInLocalStorage","type","query","data","JSON","parse","window","localStorage","getItem","filter","matching","i","Object","byString","x","getInLocalStorage","id","putInLocalStorage","newData","push","setItem","stringify","removeFromLocalStorage","error","alert","warn","o","s","a","replace","split","n","length","k","prototype","findMarkTypes","slide","name","Promise","res","rej","unique","Set","map","findMark","specimen","study","footprint","source","x0","x1","y0","y1","getMarkByIds","ids","getMark","addMark","json","Date","now","deleteMark","findHeatmap","getHeatmap","addHeatmap","deleteHeatmap","export","import","findSlide","location","slideId","URLSearchParams","document","search","substring","get","getSlide","params","log","local_dummy","findTemplate","getTemplate","DownloadMarksToFile","$D","text","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","LoadMarksFromFile","onchange","event","input","target","reader","FileReader","onload","result","forEach","provenance","image","data2","concat","reload","e","readAsText","files","defaultTemplate","template_data","ImgBoxMods","default_loadImg","CaMic","loadImg","func","p","slideName","then","response","ibmox_source","height","width","viewer","open","mpp","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","url","call","textContent","console"],"mappings":"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","file":"imgbox_package.map","sourceRoot":"../package","sourcesContent":["// overwrite store with equivalent local functions\nfunction init_LocalStore(){\n  // requirements\n  console.warn(\"{localstore mods enabled}\")\n  Object.byString = function(o, s) {\n      s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n      s = s.replace(/^\\./, '');           // strip a leading dot\n      var a = s.split('.');\n      for (var i = 0, n = a.length; i < n; ++i) {\n          var k = a[i];\n          if (k in o) {\n              o = o[k];\n          } else {\n              return;\n          }\n      }\n      return o;\n  }\n\n  function findInLocalStorage(type, query){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>{\n        let matching = true;\n        for (var i in query){\n          matching = matching && Object.byString(x, i) == query[i]\n        }\n        return matching\n      })\n    } else {\n      return []\n    }\n\n  }\n\n  function getInLocalStorage(type, id){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>x['_id'] == id)[0]\n    } else {\n      return {}\n    }\n\n  }\n\n  function putInLocalStorage(type, newData){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    data.push(newData)\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return newData\n  }\n\n  function removeFromLocalStorage(type, id){\n    console.error('Delete operation currently unsupported')\n    window.alert('Delete operation currently unsupported')\n  }\n\n\n  // replace impacted store functionality.\n  Store.prototype.findMarkTypes = function(slide, name){\n    return new Promise(function(res, rej){\n      let query={}\n      if(name){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(slide){\n        query['provenance.image.slide'] = slide\n      }\n      let data = findInLocalStorage(\"mark\", query)\n      if (data){\n        const unique = [...new Set(data.map(x => Object.byString(x,'provenance')))];\n        res(unique)\n      } else {\n        res([])\n      }\n\n      // TODO!!!\n    })\n  }\n  Store.prototype.findMark = function(slide, name, specimen, study, footprint, source, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(source){\n        query['provenance.analysis.source']= source\n      }\n      if(specimen){\n        query['provenance.image.specimen'] = specimen\n      }\n      if(study){\n        query['provenance.image.study'] = study\n      }\n      res(findInLocalStorage('mark', query))\n    })\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let data = []\n      for (var i in ids){\n        data.push(...findInLocalStorage('mark', {'provenance.analysis.execution_id': ids[i], 'provenance.image.slide': slide}))\n      }\n      res(data)\n    })\n  }\n  Store.prototype.getMark = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"mark\", id))\n    })\n  }\n  Store.prototype.addMark = function(json){\n    return new Promise(function(res, rej){\n      // give it an that's probably semi-unique\n      json['_id'] = json['_id'] || Date.now()\n      res(putInLocalStorage('mark', json))\n    })\n  }\n  Store.prototype.deleteMark = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromLocalStorage('mark', id))\n    })\n  }\n  Store.prototype.findHeatmap = function(slide, name){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      res(findInLocalStorage('heatmap', query))\n    })\n  }\n  Store.prototype.getHeatmap = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"heatmap\", id))\n    })\n  }\n  Store.prototype.addHeatmap = function(json){\n    // give it an that's probably semi-unique\n    json['_id'] = json['_id'] || Date.now()\n    return new Promise(function(res, rej){\n      res(putInLocalStorage('heatmap', json))\n    })\n  }\n  Store.prototype.deleteHeatmap = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromLocalStorage('heatmap', id))\n    })\n  }\n\n  // import and export functions\n  Store.prototype.export = function(type){\n    return new Promise(function(res, rej){\n      res(window.localStorage.getItem(type))\n    })\n  }\n  // NOTE -- overwrites\n  Store.prototype.import = function(type, data){\n    return new Promise(function(res, rej){\n      res(window.localStorage.setItem(type, data))\n    })\n  }\n  Store.prototype.findSlide = function(slide, specimen, study, location){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"id\") || \"local\";\n      let local_dummy = {\n        'id': slideId,\n        'mpp': '0.001',\n        'study':\"\",\n        'specimen':\"\"\n      }\n      res([local_dummy])\n    })\n  }\n  Store.prototype.getSlide = function(id){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"id\") || \"local\";\n      console.log(params)\n      let local_dummy = {\n        'id': slideId,\n        'mpp': '0.001',\n        'study':\"\",\n        'specimen':\"\"\n      }\n      res(local_dummy)\n    })\n  }\n  Store.prototype.findTemplate = function(name,type){\n    let query = {}\n    if (name){\n      query.name = name\n    }\n    if (type){\n      query.type = type\n    }\n    return new Promise(function(res, rej){\n      res(findInLocalStorage(\"template\", query))\n    })\n  }\n  Store.prototype.getTemplate = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"template\", id))\n    })\n  }\n  Store.prototype.DownloadMarksToFile = function(){\n      // downloads marks for the current slide only\n      // make the browser download it\n      let slide = $D.params.id // portable?\n      let query = {}\n      query['provenance.image.slide'] = slide\n      let data = JSON.parse(window.localStorage.getItem(\"mark\"))\n      let text = \"\"\n      if (data) {\n        text = JSON.stringify(data.filter(x => {\n          let matching = true;\n          for (var i in query) {\n            matching = matching && Object.byString(x, i) == query[i]\n          }\n          return matching\n        }))\n      }\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', \"markups.json\");\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n  }\n  Store.prototype.LoadMarksFromFile = function(){\n    // loads marks for the current slide only, without replacement\n    // open a file selector\n    let slide = $D.params.id\n    var element = document.createElement('input');\n    element.setAttribute('type', \"file\")\n    element.style.display = 'position: fixed; top: -100em';\n    element.onchange = function(event) {\n      var input = event.target;\n      var reader = new FileReader();\n      reader.onload = function() {\n        var text = reader.result;\n        try {\n          let data = JSON.parse(text)\n          console.log(data)\n          data.forEach(x => {\n            x.provenance.image.slide = slide\n          })\n          let data2 = JSON.parse(window.localStorage.getItem(\"mark\"))\n          data2 = data2 || []\n          data2 = data2.concat(data)\n          console.log(data2)\n          window.localStorage.setItem(\"mark\", JSON.stringify(data2))\n          window.location.reload()\n        } catch (e) {\n          console.error(e)\n        }\n        console.log(text.substring(0, 200));\n      };\n      reader.readAsText(input.files[0]);\n    };\n    element.click();\n    document.body.removeChild(element);\n  }\n}\n\n// default template\nlet defaultTemplate = {\n    \"_id\": \"0\",\n    \"type\": \"object\",\n    \"id\": \"annotation-form\",\n    \"name\": \"AnnotSchema\",\n    \"description\": \"\",\n    \"links\": [],\n    \"additionalProperties\": false,\n    \"properties\": {\n        \"name\": {\n            \"id\": \"a0\",\n            \"title\": \"Identity Name\",\n            \"type\": \"string\",\n            \"required\": true,\n            \"description\": \"note name\"\n            },\"notes\": {\n            \"id\": \"a1\",\n            \"title\": \"Notes: \",\n            \"type\": \"textarea\",\n            \"maxLength\": 128\n        }\n    }\n}\n// if no template, add our default\nlet template_data = JSON.parse(window.localStorage.getItem(\"template\"))\nif (!template_data){\n  template_data=[];\n  template_data.push(defaultTemplate)\n  window.localStorage.setItem(\"template\", JSON.stringify(template_data))\n}\n\n\nexport default init_LocalStore\n","function ImgBoxMods() {\n  console.warn(\"{imgbox mods enabled}\")\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var p = urlParams.get('id');\n    console.log(\"image ID : \" + p);\n    let slideId = p\n    this.slideId = slideId\n    this.slideName = slideId\n    this.study = \"\"\n    this.specimen = \"\"\n    fetch(p + \"/info.json\").then(response => {\n      return response.json();\n    }).then(data => {\n      let ibmox_source = {\n        \"@context\": \"http://iiif.io/api/image/2/context.json\",\n        //\"@id\": \"/iiif?iri=https://s3.amazonaws.com/ebremeribox/TCGA-02-0001-01C-01-BS1.0cc8ca55-d024-440c-a4f0-01cf5b3af861.svs\",\n        \"@id\": p,\n        \"height\": data.height,\n        \"width\": data.width,\n        \"profile\": [\"http://iiif.io/api/image/2/level2.json\"],\n        \"protocol\": \"http://iiif.io/api/image\",\n        \"tiles\": [{\n          \"scaleFactors\": [1, 2, 4, 8, 16, 32],\n          \"width\": 256\n        }]\n      }\n      this.viewer.open(ibmox_source);\n      //set scalebar\n      this.mpp = data['mpp-x'] || data['mpp-y'] || 1\n      this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = \"0\"\n      x.name = this.slideName\n      x.study = this.study\n      x.specimen = this.specimen\n      x.mpp = 1;\n      x.location = p;\n      x.url = ibmox_source\n      console.log(func)\n      console.log(x)\n      if (func && typeof func === 'function'){\n        func.call(null, x);\n      }\n      Loading.text.textContent = `loading slide's tiles...`;\n      // WARN; note that spyglass isn't working due to semi-hardcoded value at init.js line 140\n      // we may want another init.js or our own callback\n    });\n\n  }\n}\n\n\nexport default ImgBoxMods\n","import init_LocalStore from './LocalStore.js'\nimport ImgBoxMods from './ImgBoxMods.js'\n\ninit_LocalStore()\nImgBoxMods()\nconsole.warn(\"This setup is intended for imagebox\")\n// parcel build package/imgbox_package.js\n"]}